# Copyright © 2009 INRIA, Université Bordeaux 1
# Copyright © 2009 Cisco Systems, Inc.  All rights reserved.

include $(top_srcdir)/hwloc.am

DOCDIR = $(top_builddir)/doc
DOX_CONFIG = $(top_srcdir)/doc/doxygen.cfg

DOX_DIR = $(DOCDIR)/doxygen-doc
DOX_HTML_DIR = $(DOX_DIR)/html
DOX_MAN_DIR = $(DOX_DIR)/man
DOX_LATEX_DIR = $(DOX_DIR)/latex
DOX_A4PDF = $(DOX_DIR)/$(PACKAGE)-a4.pdf
DOX_LETTERPDF = $(DOX_DIR)/$(PACKAGE)-letter.pdf
DOX_TAG = $(DOX_DIR)/$(PACKAGE).tag

#
# The goal is that Doxygen output (i.e., the documentation) is
# included in release tarballs; there is no need to build anything
# from tarballs.  Developers will need to build the docs the first
# time they build after a checkout (or if something in the docs
# changes, etc.).
#
# Note that by listing directories in EXTRA_DIST, we pick up the whole
# tree (e.g., everything in the man and latex directories).
#

image_built_sources = images/diagram.png images/diagram.eps

EXTRA_DIST = \
        hwloc.doxy \
        doxygen.css \
        doxygen.cfg \
        images/dudley.png \
        images/emmett.png \
        images/hagrid.png \
        images/diagram.fig \
        www.open-mpi.org.cfg \
        $(image_built_sources) \
        $(DOX_HTML_DIR) $(DOX_MAN_DIR) $(DOX_LATEX_DIR) $(DOX_TAG)

#
# Files where the doxygen inputs live (i.e., dependencies).  Make the
# generated tagfile depend on these files, which will force them to be
# regenerated (i.e., re-run doxygen) whenever any of these files
# change.
#

dox_inputs = $(DOX_CONFIG) \
       $(srcdir)/hwloc.doxy \
       $(top_srcdir)/include/hwloc.h \
       $(top_srcdir)/include/hwloc/helper.h \
       $(top_srcdir)/include/hwloc/cpuset.h \
       $(top_srcdir)/include/hwloc/linux-libnuma.h \
       $(top_srcdir)/include/hwloc/glibc-sched.h

#
# Create the images that we need for the PDF output and the HTML
# output.  There is not an easy way to check if the output of
# AC_PATH_PROG found something in configure.ac (!), so we have to put
# a run-time check here to see if fig2dev was found.  :-(
#

if BUILD_DOXYGEN
BUILT_SOURCES = $(image_built_sources)

images/diagram.png: $(srcdir)/images/diagram.fig
	$(MKDIR_P) images
	@if test "x$(FIG2DEV)" = "x"; then \
	    echo "ERROR: Cannot find the 'fig2dev' exectuable -- cannot make $@"; \
	    exit 1; \
	fi
	$(FIG2DEV) -L png $< $@

images/diagram.eps: $(srcdir)/images/diagram.fig
	$(MKDIR_P) images
	@if test "x$(FIG2DEV)" = "x"; then \
	    echo "ERROR: Cannot find the 'fig2dev' exectuable -- cannot make $@"; \
	    exit 1; \
	fi
	$(FIG2DEV) -L eps $< $@
endif

#
# Rules for running doxygen.  It depends on the built images and the
# dox_inputs.
#

if BUILD_DOXYGEN
$(DOX_TAG): $(BUILT_SOURCES) $(dox_inputs)
	$(RM) -r $(DOX_DIR)
	$(DOXYGEN) $(DOX_CONFIG)
	-sed -i -e 's/__hwloc_restrict/restrict/g;s/\\_\\-\\_\\-hwloc\\_\\-restrict/restrict/g;s/__inline/inline/g;s/\\_\\-\\_\\-inline/inline/g' $(DOX_DIR)/html/*.html $(DOX_DIR)/latex/*.tex $(DOX_DIR)/man/man3/*.3
endif

#
# Rules for building the PDF
#

if BUILD_DOXYGEN
# Make both an A4wide PDF and a US letter PDF
$(DOX_PDF): $(DOX_TAG)

# The Doxygen config is set to generate a4 latex -- no transformation
# is necessary.
$(DOX_A4PDF): $(DOX_TAG)
	cd $(DOX_LATEX_DIR); \
	$(RM) *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
	cp refman.tex a4-refman.tex; \
	$(PDFLATEX) a4-refman.tex; \
	$(MAKEINDEX) a4-refman.idx; \
	$(PDFLATEX) a4-refman.tex; \
	done=0; repeat=5; \
	while test $$done = 0 -a $$repeat -gt 0; do \
           if $(EGREP) 'Rerun (LaTeX|to get cross-references right)' a4-refman.log > /dev/null 2>&1; then \
	       $(PDFLATEX) a4-refman.tex; \
	       repeat=`expr $$repeat - 1`; \
	   else \
	       done=1; \
	   fi; \
	done; \
	mv a4-refman.pdf ../../$(DOX_A4PDF)

# The Doxygen config is set to generate a4 latex -- slightly transform
# to make suitable for US letter.
$(DOX_LETTERPDF): $(DOX_TAG)
	cd $(DOX_LATEX_DIR); \
	$(RM) *.aux *.toc *.idx *.ind *.ilg *.log *.out; \
	sed -e 's/a4paper/letterpaper/g' -e 's/\\usepackage{a4wide}//' refman.tex > letter-refman.tex; \
	$(PDFLATEX) letter-refman.tex; \
	$(MAKEINDEX) letter-refman.idx; \
	$(PDFLATEX) letter-refman.tex; \
	done=0; repeat=5; \
	while test $$done = 0 -a $$repeat -gt 0; do \
           if $(EGREP) 'Rerun (LaTeX|to get cross-references right)' letter-refman.log > /dev/null 2>&1; then \
	       $(PDFLATEX) letter-refman.tex; \
	       repeat=`expr $$repeat - 1`; \
	   else \
	       done=1; \
	   fi; \
	done; \
	mv letter-refman.pdf ../../$(DOX_LETTERPDF)
endif

#
# Note that we want to use our own doxygen.css file; not the one that
# doxygen installs in the HTML directory.  So manually copy it over.
# Be a little clever: only copy the doxygen.css file over if it exists
# in DOX_HTML_DIR (which is in the build tree).  If the html tree
# doesn't exist in the build tree, then we're using an html tree in
# the source tree, and we don't need to copy over the doxygen.css
# because we didn't build the html tree (e.g., the html tree came
# pre-bundled in a tarball).
#

if BUILD_DOXYGEN
all-local: $(DOX_TAG)
	if test -d $(DOX_HTML_DIR) -a -f $(DOX_HTML_DIR)/doxygen.css; then \
	    cp -f $(srcdir)/doxygen.css $(DOX_HTML_DIR); \
	fi
endif

#
# Un/install the generated PDF and man pages
#

if INSTALL_DOXYGEN
dist_pdf_DATA = $(DOX_A4PDF) $(DOX_LETTERPDF)
endif

#
# Install the HWLOC_* and hwloc_* man pages.  It would be great to
# figure out how to not have to list every installable man page here
# in the Makefile.am...  :-(
#

if INSTALL_DOXYGEN
man3_MANS = \
        $(DOX_MAN_DIR)/man3/HWLOC_CPUBIND_PROCESS.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_CPUBIND_STRICT.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_CPUBIND_THREAD.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_OBJ_CACHE.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_OBJ_CORE.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_OBJ_MACHINE.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_OBJ_MISC.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_OBJ_NODE.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_OBJ_PROC.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_OBJ_SOCKET.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_OBJ_SYSTEM.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_TYPE_DEPTH_MULTIPLE.3 \
        $(DOX_MAN_DIR)/man3/HWLOC_TYPE_DEPTH_UNKNOWN.3 \
        $(DOX_MAN_DIR)/man3/hwloc_compare_types.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpubind_policy_t.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_alloc.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_free.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_dup.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_copy.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_all_but_cpu.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_andset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_clearset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_clr.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_compar.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_compar_first.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_fill.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_first.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_foreach_begin.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_foreach_end.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_from_glibc_sched_affinity.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_from_ith_ulong.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_from_linux_libnuma_bitmask.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_from_linux_libnuma_nodemask.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_from_linux_libnuma_ulongs.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_from_string.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_from_ulong.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_intersects.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_isequal.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_isfull.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_isincluded.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_isset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_iszero.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_last.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_orset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_set.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_set_range.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_singlify.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_snprintf.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_asprintf.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_t.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_to_glibc_sched_affinity.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_to_ith_ulong.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_to_linux_libnuma_bitmask.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_to_linux_libnuma_nodemask.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_to_linux_libnuma_ulongs.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_to_ulong.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_weight.3 \
        $(DOX_MAN_DIR)/man3/hwloc_cpuset_xorset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_distribute.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_closest_objs.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_common_ancestor_obj.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_cache_covering_cpuset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_child_covering_cpuset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_obj_covering_cpuset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_depth_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_largest_objs_inside_cpuset.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_nbobjs_inside_cpuset_by_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_nbobjs_inside_cpuset_by_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_next_child.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_next_obj_covering_cpuset_by_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_next_obj_covering_cpuset_by_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_next_obj_inside_cpuset_by_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_next_obj_inside_cpuset_by_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_next_obj_by_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_next_obj_by_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_obj_inside_cpuset_by_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_obj_inside_cpuset_by_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_obj_by_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_obj_by_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_cache_covering_obj.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_system_obj.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_type_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_nbobjs_by_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_nbobjs_by_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_type_or_above_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_get_type_or_below_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_attr_u.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_attr_u_hwloc_cache_attr_s.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_attr_u_hwloc_machine_attr_s.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_attr_u_hwloc_memory_attr_s.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_attr_u_hwloc_misc_attr_s.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_cpuset_snprintf.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_is_in_subtree.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_snprintf.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_t.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_type_of_string.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_type_string.3 \
        $(DOX_MAN_DIR)/man3/hwloc_obj_type_t.3 \
        $(DOX_MAN_DIR)/man3/hwloc_set_cpubind.3 \
        $(DOX_MAN_DIR)/man3/hwloc_set_proc_cpubind.3 \
        $(DOX_MAN_DIR)/man3/hwloc_set_thread_cpubind.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_check.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_destroy.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_flags_e.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_get_depth.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_ignore_all_keep_structure.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_ignore_type.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_ignore_type_keep_structure.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_init.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_is_thissystem.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_load.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_set_flags.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_set_fsroot.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_set_synthetic.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_set_xml.3 \
        $(DOX_MAN_DIR)/man3/hwloc_topology_t.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_binding.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_configuration.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_conversion.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_cpuset.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_creation.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_glibc_sched.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_helper_binding.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_helper_find_cache.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_helper_find_covering.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_helper_find_coverings.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_helper_find_inside.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_helper_traversal.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_helper_traversal_basic.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_helper_types.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_information.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_linux_libnuma_bitmask.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_linux_libnuma_nodemask.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_linux_libnuma_ulongs.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_objects.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_traversal.3 \
        $(DOX_MAN_DIR)/man3/hwlocality_types.3
endif

#
# Put in these rules to force the generation of the man pages and get
# all the dependencies right.  Additionally, this forces a
# serialization during parallel builds (e.g., "make -j X") to ensure
# that we don't get partial target errors.
#

if BUILD_DOXYGEN
$(man3_MANS): $(DOX_TAG)
$(DOX_A4PDF): $(DOX_TAG)
$(DOX_LETTERPDF): $(DOX_TAG)
$(DOX_HTML_DIR): $(DOX_TAG)
$(DOX_LATEX_DIR): $(DOX_TAG)
$(DOX_MAN_DIR): $(DOX_TAG)
endif

#
# Make sure that the documentation example works
#

if BUILD_DOXYGEN
TESTS = hwloc-hello
check_PROGRAMS = $(TESTS)

hwloc_hello_LDADD = $(top_builddir)/src/libhwloc.la
hwloc_hello_DEPENDENCIES = $(hwloc_hello_LDADD)
endif

#
# Only remove the actual generated documentation files for maintainers
#

MAINTAINERCLEANFILES = $(DOX_TAG) \
    -r \
    $(DOX_HTML_DIR) \
    $(DOX_MAN_DIR) \
    $(DOX_LATEX_DIR) \
    $(DOX_A4PDF) \
    $(DOX_LETTERPDF)

#
# Rules for creating the top-level README file.  There does not appear
# to be an easy way to know if AC_PATH_PROG found something in
# configure.ac (!), so put a run-time check here to see if we have
# w3c.
#

if BUILD_README
doc readme: all $(top_srcdir)/README
$(top_srcdir)/README: $(DOX_HTML_DIR)
	LC_ALL=C $(W3_GENERATOR) $(DOX_HTML_DIR)/index.html | sed -n -e 's/^   //' -e '/^Introduction$$/,$$p' > $@
else
doc readme: no-build-readme
$(top_srcdir)/README: no-build-readme

no-build-readme:
	@echo "ERROR: You do not have the 'w3m' or 'lynx' executables to build the README, or do not have the 'doxygen' executable to build the docs."
	@echo "ERROR: Cannot continue."
	@exit 1
endif

#DOCUPLOADHOST=sync.bordeaux.inria.fr
#DOCUPLOADOPTS=
#doc-upload: @DX_DOCDIR@/html
#	echo FIXME
#	false
#	rsync -avz --delete --chmod=ug+rwX,o+rX $(DOCUPLOADOPTS) @DX_DOCDIR@/html/ $(DOCUPLOADHOST):/web/runtime/libtopology/doc/
